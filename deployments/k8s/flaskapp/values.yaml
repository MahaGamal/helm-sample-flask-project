# Default values for flaskapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Your app name
# Ex:
# nameOverride: "hello-flask"
# fullnameOverride: "Hello Flask Awesome App"
nameOverride: ""
fullnameOverride: ""

# The number of instance
replicaCount: 1

# You app image
# If the image is stored in a private registry,
#   you will need to specify pullSecret and dockerConfig
#   dockerConfig is Docker config file after you login to your registry, which is in ~/.docker/config.json by default
#     in Google Cloud Registry: https://cloud.google.com/container-registry/docs/advanced-authentication#json_key_file
#     in Docker Hub: execute command `docker login`
image:
  # registry: gcr.io
  # repository: google-samples/hello-app
  # tag: "1.0"
  # port: 5000
  # pullPolicy: IfNotPresent
  # dockerConfig: #
  # command: []

# Your app health check.
healthcheck:
  enabled: true
  liveness: "/"
  readiness: "/"
  host: ""

# Ingress configuration
# HTTPS is auto-enabled
# You can route the request based on domain or uri path
# https://kubernetes.io/docs/concepts/services-networking/ingress/#types-of-ingress
ingress:
  annotations: {}
  hosts: []
    # - host: myapp.k8s.teko.vn
    #   paths:
    #     - ""

# Your app's secrets
# Edit here then remove
secrets:
  # db-url: sqlite:///app.db
  # secret-key: "something-very-secret"

# Your app's env vars
# A env var could be a string value, or a value from secret
env:
  # FLASK_CONFIG: "production"

envFromSecret:
  # SECRET_KEY: secret-key
  # DATABASE_URL: db-url
 
celery:
  enabled: False
  workerCount: 1
  workerCommand: #
  beatCommand: #

jobs: []
  # - name: "a job"
  #   command: ["/bin/sh", "-c", "echo Hello"]
  #   image: #
  #   schedule: "*/1 * * * *"
