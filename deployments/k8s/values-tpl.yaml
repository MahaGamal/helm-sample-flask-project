# Default values for flaskapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Your app name
# nameOverride: "hello-flask"
# fullnameOverride: "hello-flask-awesome-app"
nameOverride: "hello-flask{{ branch }}"
fullnameOverride: "hello-Flask-app{{ branch }}"

# You app image
# If the image is stored in a private registry,
#   you will need to specify dockerConfig
#   dockerConfig is Docker config file after you login to your registry, which is in ~/.docker/config.json by default
#     in Google Cloud Registry: https://cloud.google.com/container-registry/docs/advanced-authentication#json_key_file
#     in Docker Hub: execute command `docker login`
image:
  registry: hub.teko.vn
  repository: hello-flask/hello-flask
  tag: 0.0.1
  pullPolicy: IfNotPresent
  dockerConfig: #

app:
  # The number of instance
  replicaCount: 1

  port: 5000

  command: []

  # Your app health check.
  healthcheck:
    enabled: true
    liveness: "/"
    readiness: "/"
    host: ""

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 60
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 60


# Ingress configuration
# HTTPS is auto-enabled
# You can route the request based on domain or uri path
# https://kubernetes.io/docs/concepts/services-networking/ingress/#types-of-ingress
ingress:
  annotations: {}
    # nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: hello-flask{{ branch }}.k8s.teko.vn
      paths:
        - ""

# Your app's secrets
secrets:
  db-url: sqlite:///


# Your app's env vars
# A env var could be a string value, or a value from secret
env:
  FLASK_CONFIG: "production"
  REDIS_URL: "redis://redis-master:6379"

envFromSecret:
  # SECRET_KEY: secret-key
  DATABASE_URL: db-url

# Enable redis if you are using redis pubsub
#  by settings enabled: true
#  You must leave other values as default
# NOTE: redis is used as pubsub only, without persistence
# The redis service url will be: redis://redis-master:6379
redis:
  enabled: true

# Enable celery if you are using celery worker and beat
# You must supply commands for celery worker and beat
celery:
  worker:
    enabled: true
    replicaCount: 2
    port: 5000
    command: ["/bin/sh", "-c", "celery -A app:celery worker -l info --without-gossip --without-mingle --without-heartbeat"]
  
  beat:
    enabled: false
    port: 5000
    command: []

jobs: []
  # - name: #
  #   command: #
  #   image: #
  #   schedule: "*/1 * * * *"
