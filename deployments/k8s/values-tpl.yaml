# Default values for flaskapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Your app name
# nameOverride: "hello-flask"
# fullnameOverride: "hello-flask-awesome-app"
nameOverride: "hello-flask{{ branch }}"
fullnameOverride: "hello-Flask-app{{ branch }}"

# The number of instance
replicaCount: 1

# You app image
# If the image is stored in a private registry,
#   you will need to specify dockerConfig
#   dockerConfig is Docker config file after you login to your registry, which is in ~/.docker/config.json by default
#     in Google Cloud Registry: https://cloud.google.com/container-registry/docs/advanced-authentication#json_key_file
#     in Docker Hub: execute command `docker login`
image:
  registry: hub.k8s.teko.vn
  repository: hello-flask/hello-flask
  tag: 0.0.1
  port: 5000
  pullPolicy: IfNotPresent
  dockerConfig: blabla
  command: ["/bin/sh", "-c", "run"]

# Your app health check.
healthcheck:
  enabled: true
  liveness: "/"
  readiness: "/"
  host: ""

# Hosts configuration
# HTTPS is auto-enabled
# You can route the request based on domain or uri path
# https://kubernetes.io/docs/concepts/services-networking/ingress/#types-of-ingress
hosts:
  - host: hello-flask{{ branch }}.k8s.teko.vn
    paths:
      - ""

# Your app's secrets
secrets:
  db-url: sqlite:///


# Your app's env vars
# A env var could be a string value, or a value from secret
env:
  FLASK_CONFIG: "production"
  REDIS_URL: "redis://redis-master:6379"

envFromSecret:
  # SECRET_KEY: secret-key
  DATABASE_URL: db-url

# Enable redis if you are using redis pubsub
#  by settings enabled: true
#  You must leave other values as default
# NOTE: redis is used as pubsub only, without persistence
# The redis service url will be: redis://redis-master:6379
redis:
  enabled: true

  nameOverride: redis
  fullnameOverride: redis
  cluster:
    enabled: false
  master:
    persistence:
      enabled: false

# Enable celery if you are using celery worker and beat
# You must supply commands for celery worker and beat
celery:
  enabled: true
  workerCount: 2
  workerCommand: |-
    ["/bin/sh", "-c", "celery -A app:celery worker -l info --without-gossip --without-mingle --without-heartbeat"]
  beatCommand: #

# jobs:
#   - name: #
#     command: #
#     image: #
#     schedule: "*/1 * * * *"
